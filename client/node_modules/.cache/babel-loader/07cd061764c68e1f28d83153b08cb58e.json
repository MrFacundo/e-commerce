{"ast":null,"code":"var _jsxFileName = \"/home/facu/code/MrFacundo/react/ecommerce/flaconi-ecommerce/client/src/components/Products.js\";\nimport React, { Component } from \"react\";\nimport \"./Products.css\"; // import { useQuery, gql } from \"@apollo/client\";\n\nimport { FaStar } from \"react-icons/fa\"; // To implement: use GraphQL query to request data. Right now the data is being requested from data.json\n//\n// const PRODUCTS_QUERY = gql`\n//   query ProductsQuery {\n//     products {\n//       id\n//       name\n//       brand\n//       type\n//       image\n//       price\n//       size\n//       rating\n//     }\n//   }\n// `;\n\nexport default class Products extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"products-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, this.props.products.map(product => /*#__PURE__*/React.createElement(\"li\", {\n      key: product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\" + product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: product.image,\n      alt: product.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, product.brand)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, product.name)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"product-type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, product.type), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, [...Array(5)].map((star, i) => {\n      const ratingValue = i + 1;\n      const productRating = Math.round(product.rating / 20);\n      return /*#__PURE__*/React.createElement(FaStar, {\n        className: \"star\",\n        size: 10,\n        color: ratingValue <= productRating ? \"##000000\" : \"#e4e5e9\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"from \\u20AC \", product.price / 100, \" / \", product.size, \" \"))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/facu/code/MrFacundo/react/ecommerce/flaconi-ecommerce/client/src/components/Products.js"],"names":["React","Component","FaStar","Products","render","props","products","map","product","id","image","name","brand","type","Array","star","i","ratingValue","productRating","Math","round","rating","price","size"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP,C,CAEA;;AAEA,SAASC,MAAT,QAAuB,gBAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC9CG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAyBC,OAAD,iBACvB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAE,MAAMD,OAAO,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAED,OAAO,CAACE,KAAlB;AAAyB,MAAA,GAAG,EAAEF,OAAO,CAACG,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,OAAO,CAACI,KAAZ,CADF,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,OAAO,CAACG,IAAZ,CADF,CALF,eAQE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BH,OAAO,CAACK,IAArC,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcP,GAAd,CAAkB,CAACQ,IAAD,EAAOC,CAAP,KAAa;AAC9B,YAAMC,WAAW,GAAGD,CAAC,GAAG,CAAxB;AACA,YAAME,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACa,MAAR,GAAiB,EAA5B,CAAtB;AACA,0BACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EACHJ,WAAW,IAAIC,aAAf,GACI,UADJ,GAEI,SANR;AAQE,QAAA,GAAG,EAAEF,CARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD,KAfA,CADH,CATF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACUR,OAAO,CAACc,KAAR,GAAgB,GAD1B,SACkCd,OAAO,CAACe,IAD1C,EACgD,GADhD,CADF,CA3BF,CADF,CADF,CADD,CADH,CADF,CADF;AA6CD;;AA/C6C","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Products.css\";\n\n// import { useQuery, gql } from \"@apollo/client\";\n\nimport { FaStar } from \"react-icons/fa\";\n\n// To implement: use GraphQL query to request data. Right now the data is being requested from data.json\n//\n// const PRODUCTS_QUERY = gql`\n//   query ProductsQuery {\n//     products {\n//       id\n//       name\n//       brand\n//       type\n//       image\n//       price\n//       size\n//       rating\n//     }\n//   }\n// `;\n\nexport default class Products extends Component {\n  render() {\n    return (\n      <div className=\"products-container\">\n        <ul className=\"products\">\n          {this.props.products.map((product) => (\n            <li key={product.id}>\n              <div>\n                <a href={\"#\" + product.id}>\n                  <img src={product.image} alt={product.name}></img>\n                  <p>\n                    <b>{product.brand}</b>\n                  </p>\n                  <p>\n                    <b>{product.name}</b>\n                  </p>\n                  <p className=\"product-type\">{product.type}</p>\n                  <div>\n                    {[...Array(5)].map((star, i) => {\n                      const ratingValue = i + 1;\n                      const productRating = Math.round(product.rating / 20);\n                      return (\n                        <FaStar\n                          className=\"star\"\n                          size={10}\n                          color={\n                            ratingValue <= productRating\n                              ? \"##000000\"\n                              : \"#e4e5e9\"\n                          }\n                          key={i}\n                        />\n                      );\n                    })}\n                  </div>\n                  <div>\n                    <div>\n                      from â‚¬ {product.price / 100} / {product.size}{\" \"}\n                    </div>\n                  </div>\n                </a>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}